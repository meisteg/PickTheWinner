apply plugin: 'com.android.application'
apply plugin: 'crashlytics'

android {
    compileSdkVersion 20
    buildToolsVersion "20.0.0"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 20
        versionCode 400
        versionName "4.0.0-" + gitSha()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    productFlavors {
        free {
            // No config changes from default
        }
        internal {
            versionName defaultConfig.versionName + "-internal"
        }
    }

    signingConfigs {
        release {
            storeFile file('release.keystore')
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            versionNameSuffix "-dev"

            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

def gitSha() {
    return 'git describe --always --dirty --match none'.execute().text.trim()
}

dependencies {
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.android.support:support-v4:20.0.0'
    compile 'com.google.android.gms:play-services:5.0.77'
    compile 'com.jakewharton:disklrucache:2.0.2'
    compile 'com.crashlytics.android:crashlytics:1.1.11'
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

// get signing config from gradle.properties file
if (project.hasProperty('storePassword')
        && project.hasProperty('keyAlias')
        && project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = null
}
